// script.js
let state = {
    balance: 1000,
    wins: 0,
    losses: 0,
    totalWon: 0,
    totalLost: 0,
    lastBonus: 0
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
function loadState() {
    const savedState = localStorage.getItem('fpiCasinoState');
    if (savedState) {
        state = JSON.parse(savedState);
        updateUI();
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
function saveState() {
    localStorage.setItem('fpiCasinoState', JSON.stringify(state));
    updateUI();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
function updateUI() {
    document.getElementById('balance').textContent = state.balance;
    document.getElementById('wins').textContent = state.wins;
    document.getElementById('losses').textContent = state.losses;
    document.getElementById('totalWon').textContent = state.totalWon;
    document.getElementById('totalLost').textContent = state.totalLost;
    updateBonusButton();
}

// –°–ª–æ—Ç—ã
function playSlots() {
    if (state.balance < 50) {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ FPIcoins!');
        return;
    }

    state.balance -= 50;
    state.totalLost += 50;

    const symbols = ['7Ô∏è‚É£', 'üíé', 'üçí', 'üçä', 'üçá', 'üçé'];
    const result = Array.from({length: 3}, () => symbols[Math.floor(Math.random() * symbols.length)]);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è
    let spins = 0;
    const maxSpins = 10;
    const spinInterval = setInterval(() => {
        document.getElementById('slot1').textContent = symbols[Math.floor(Math.random() * symbols.length)];
        document.getElementById('slot2').textContent = symbols[Math.floor(Math.random() * symbols.length)];
        document.getElementById('slot3').textContent = symbols[Math.floor(Math.random() * symbols.length)];
        
        spins++;
        if (spins >= maxSpins) {
            clearInterval(spinInterval);
            document.getElementById('slot1').textContent = result[0];
            document.getElementById('slot2').textContent = result[1];
            document.getElementById('slot3').textContent = result[2];
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–∞
            let win = 0;
            if (new Set(result).size === 1) {
                win = 50 * 20; // x20 –∑–∞ —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
            } else if (new Set(result).size === 2) {
                win = 50 * 3;  // x3 –∑–∞ –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
            }

            if (win > 0) {
                state.balance += win;
                state.wins++;
                state.totalWon += win;
                alert(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${win} FPIcoins!`);
            } else {
                state.losses++;
            }
            
            saveState();
        }
    }, 100);
}

// –ö–æ—Å—Ç–∏
function playDice() {
    if (state.balance < 50) {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ FPIcoins!');
        return;
    }

    state.balance -= 50;
    state.totalLost += 50;

    const diceResult = Math.floor(Math.random() * 6) + 1;
    document.getElementById('diceResult').textContent = diceResult;

    if (diceResult >= 4) {
        const win = 50 * diceResult;
        state.balance += win;
        state.wins++;
        state.totalWon += win;
        alert(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${win} FPIcoins!`);
    } else {
        state.losses++;
    }

    saveState();
}

// –ë–æ–Ω—É—Å
function updateBonusButton() {
    const now = Date.now();
    const bonusButton = document.getElementById('bonusButton');
    const bonusTimer = document.getElementById('bonusTimer');

    if (now - state.lastBonus < 24 * 60 * 60 * 1000) {
        bonusButton.disabled = true;
        const timeLeft = 24 * 60 * 60 * 1000 - (now - state.lastBonus);
        const hours = Math.floor(timeLeft / (60 * 60 * 1000));
        const minutes = Math.floor((timeLeft % (60 * 60 * 1000)) / (60 * 1000));
        bonusTimer.textContent = `–î–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ ${hours}—á ${minutes}–º`;
    } else {
        bonusButton.disabled = false;
        bonusTimer.textContent = '–î–æ—Å—Ç—É–ø–Ω–æ!';
    }
}

function claimBonus() {
    const now = Date.now();
    if (now - state.lastBonus < 24 * 60 * 60 * 1000) {
        return;
    }

    const bonus = Math.floor(Math.random() * 401) + 100; // 100-500
    state.balance += bonus;
    state.lastBonus = now;
    alert(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${bonus} FPIcoins!`);
    saveState();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
loadState();
setInterval(updateBonusButton, 1000);
